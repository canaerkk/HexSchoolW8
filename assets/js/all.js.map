{"version":3,"sources":["all.js","swiper.js"],"names":["lgbreakpoint","window","matchMedia","mySwiper","listenSwiper","breakpointChecker","matches","undefined","destroy","enableSwiper","Swiper","slidesPerView","spaceBetween","console","log","enableListenSwiper","navigation","nextEl","prevEl","grid","rows","fill","breakpoints","addListener"],"mappings":"AAAA;;;ACAA,CAAC,YAAW;AAEV,eAFU,CAIV;AACA;;AACA,MAAMA,YAAY,GAAGC,MAAM,CAACC,UAAP,CAAmB,oBAAnB,CAArB,CANU,CASV;;AACA,MAAIC,QAAJ;AACA,MAAIC,YAAJ,CAXU,CAaV;AACA;AACA;;AAEA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAW;AAEnC;AACA,QAAKL,YAAY,CAACM,OAAb,KAAyB,IAA9B,EAAqC;AACnC;AACA,UAAKH,QAAQ,KAAKI,SAAlB,EAA8BJ,QAAQ,CAACK,OAAT,CAAkB,IAAlB,EAAwB,IAAxB,EAFK,CAInC;;AACA;AACD,KAND,MAMO,IAAKR,YAAY,CAACM,OAAb,KAAyB,KAA9B,EAAsC;AAE3C;AACA,aAAOG,YAAY,EAAnB;AAED;AAEF,GAhBD,CAjBU,CAmCV;AACA;AACA;;;AAEA,MAAMA,YAAY,GAAG,SAAfA,YAAe,GAAW;AAE9BN,IAAAA,QAAQ,GAAG,IAAIO,MAAJ,CAAY,mBAAZ,EAAiC;AAE1CC,MAAAA,aAAa,EAAE,GAF2B;AAG1CC,MAAAA,YAAY,EAAE;AAH4B,KAAjC,CAAX;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,GATD;;AAUA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAU;AACnCX,IAAAA,YAAY,GAAG,IAAIM,MAAJ,CAAW,eAAX,EAA4B;AACzCC,MAAAA,aAAa,EAAE,CAD0B;AAEzCK,MAAAA,UAAU,EAAE;AACVC,QAAAA,MAAM,EAAE,qBADE;AAEVC,QAAAA,MAAM,EAAE;AAFE,OAF6B;AAMzCC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE,CADF;AAEJC,QAAAA,IAAI,EAAE;AAFF,OANmC;AAUzCC,MAAAA,WAAW,EAAE;AACX,aAAK;AACHX,UAAAA,aAAa,EAAE,GADZ;AAEHQ,UAAAA,IAAI,EAAE;AACJC,YAAAA,IAAI,EAAE;AADF;AAFH,SADM;AAOX,cAAM;AACJT,UAAAA,aAAa,EAAE,CADX;AAEJQ,UAAAA,IAAI,EAAE;AACJC,YAAAA,IAAI,EAAE;AADF;AAFF;AAPK;AAV4B,KAA5B,CAAf;AAyBAP,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,GA3BD,CAjDU,CA8EV;AACA;AACA;AAEA;;;AACAd,EAAAA,YAAY,CAACuB,WAAb,CAAyBlB,iBAAzB,EAnFU,CAoFV;;AACAA,EAAAA,iBAAiB;AACjBU,EAAAA,kBAAkB;AAEnB,CAxFD;AAwFM","file":"all.js","sourcesContent":["","(function() {\n\n  'use strict';\n\n  // breakpoint where swiper will be destroyed\n  // and switches to a dual-column layout\n  const lgbreakpoint = window.matchMedia( '(max-width: 992px)' );\n  \n\n  // keep track of swiper instances to destroy later\n  let mySwiper;\n  let listenSwiper;\n\n  //////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////\n\n  const breakpointChecker = function() {\n\n    // if larger viewport and multi-row layout needed\n    if ( lgbreakpoint.matches === true ) {\n      // clean up old instances and inline styles when available\n      if ( mySwiper !== undefined ) mySwiper.destroy( true, true );\n      \n      // or/and do nothing\n      return ;\n    } else if ( lgbreakpoint.matches === false ) {\n\n      // fire small viewport version of swiper\n      return enableSwiper();\n\n    }\n\n  };\n\n  //////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////\n\n  const enableSwiper = function() {\n\n    mySwiper = new Swiper ('.swiper-container', {\n\n      slidesPerView: 1.5,\n      spaceBetween: 30,\n\n    });\n    console.log('mySwiper');\n  };\n  const enableListenSwiper = function(){\n    listenSwiper = new Swiper(\".listenSwiper\", {\n      slidesPerView: 1,\n      navigation: {\n        nextEl: \".swiper-button-next\",\n        prevEl: \".swiper-button-prev\",\n      },\n      grid: {\n        rows: 3,\n        fill: 'column'\n      },\n      breakpoints: {\n        768: {\n          slidesPerView: 2.1,\n          grid: {\n            rows: 2,\n          },\n        },\n        1200: {\n          slidesPerView: 3,\n          grid: {\n            rows: 2,\n          },\n        }\n      }\n    });\n    console.log('listenSwiper');\n  }\n  \n  //////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////\n\n  // keep an eye on viewport size changes\n  lgbreakpoint.addListener(breakpointChecker);\n  // kickstart\n  breakpointChecker();\n  enableListenSwiper();\n\n})(); /* IIFE end */\n"]}